name: Docker Image Security Scan

on:
  push:
    branches:
      - main
      - docker
  pull_request:
    branches:
      - main

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository (if needed)
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 3: Pull Docker image from Docker Hub
      - name: Pull Docker Image
        run: docker pull oluchioraekwe/taskmanger:v5.1

      - name: Run Trivy vulnerability scanner
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'oluchioraekwe/taskmanger:v5.1'
          format: 'json'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output:  trivy-report.json

      - name: Save scan result.
        id: trivy_output
        run: |
          ls -lh
          REPORT=$(cat trivy-report.json)
          echo "trivy<<EOF" >> $GITHUB_OUTPUT
          echo "$REPORT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          # needs: ${{ toJson(needs) }}
          # job: ${{ toJson(job) }}
          # steps: ${{ steps.trivy_scan.outputs.trivy-report.json }}
          # raw : ${{ steps.trivy_output.outputs.trivy }}
          raw: >-
            {
                "type": "message",
                "attachments":
                [
                    {
                        "contentType": "application/vnd.microsoft.card.adaptive",
                        "content":
                        {
                            "type": "AdaptiveCard",
                            "body":
                            [
                                {
                                    "type": "TextBlock",
                                    "text": "Test Result"
                                }
                                ${{ steps.trivy_output.outputs.trivy }}
                            ]
                        }
                    }
                ]
            }

      # - name: Upload Trivy Report
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: trivy-report
      #     path: trivy-report.json